---
- name: "Create certificates for all etcd members"
  become: true
  block:
    - name: Initialize the etcd certificate authority
      when: not etcd_initialized.stat.exists
      become: true
      ansible.builtin.command: "{{ kubernetes_commands['kubeadm']['init']['etcd']['ca'] }}"
      register: kubeadm_init_certs

    - name: Create certificates for all etcd members
      become: true
      ansible.builtin.command: "{{ item }}"
      with_items: "{{ etcd_cmds }}"

    # - name: "Create certs for {{ groups['etcd'][2] }}"
    #   become: true
    #   ansible.builtin.command: "{{ item }}"
    #   with_items:
    #     - "kubeadm init phase certs etcd-server --config={{ etcd_nodes['etcd03']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs etcd-peer --config={{ etcd_nodes['etcd03']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs etcd-healthcheck-client --config={{ etcd_nodes['etcd03']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs apiserver-etcd-client --config={{ etcd_nodes['etcd03']['kubeadmcfg'] }}"
    #     - "cp -R {{ directories['kubernetes']['system_scope']['pki']['base'] }} {{ etcd_nodes['etcd03']['temp_folder'] }}/"
    #     # cleanup non-reusable certificates
    #     - "find {{ directories['kubernetes']['system_scope']['pki']['base'] }} -not -name ca.crt -not -name ca.key -type f -delete"

    # - name: "Create certs for {{ etcd_nodes['etcd02']['hostname'] }}"
    #   become: true
    #   ansible.builtin.command: "{{ item }}"
    #   with_items:
    #     - "kubeadm init phase certs etcd-server --config={{ etcd_nodes['etcd02']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs etcd-peer --config={{ etcd_nodes['etcd02']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs etcd-healthcheck-client --config={{ etcd_nodes['etcd02']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs apiserver-etcd-client --config={{ etcd_nodes['etcd02']['kubeadmcfg'] }}"
    #     - "cp -R {{ directories['kubernetes']['system_scope']['pki']['base'] }} {{ etcd_nodes['etcd02']['temp_folder'] }}/"
    #     # cleanup non-reusable certificates
    #     - "find {{ directories['kubernetes']['system_scope']['pki']['base'] }} -not -name ca.crt -not -name ca.key -type f -delete"

    # - name: "Create certs for {{ etcd_nodes['etcd01']['hostname'] }}"
    #   become: true
    #   ansible.builtin.command: "{{ item }}"
    #   with_items:
    #     - "kubeadm init phase certs etcd-server --config={{ etcd_nodes['etcd01']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs etcd-peer --config={{ etcd_nodes['etcd01']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs etcd-healthcheck-client --config={{ etcd_nodes['etcd01']['kubeadmcfg'] }}"
    #     - "kubeadm init phase certs apiserver-etcd-client --config={{ etcd_nodes['etcd01']['kubeadmcfg'] }}"

    # - name: Remove obsolete certs
    #   become: true
    #   ansible.builtin.command: "{{ item }}"
    #   with_items:
    #     - "find {{ etcd_nodes['etcd02']['temp_folder'] }} -name ca.key -type f -delete"
    #     - "find {{ etcd_nodes['etcd03']['temp_folder'] }} -name ca.key -type f -delete"

