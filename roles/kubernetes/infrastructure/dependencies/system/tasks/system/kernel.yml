---
- name: Check if k8s.conf exists in /etc/modules-load.d
  become: true
  ansible.builtin.stat:
    path: "{{ sub_file_mappings['system']['modules_load_d']['k8s_conf'] }}"
  register: has_k8sconf

- name: Check if the network bridge kernel module is already configured
  become: true
  ansible.builtin.stat:
    path: "{{ sub_file_mappings['system']['sysctl_d']['k8s_conf'] }}"
  register: has_k8s_sysctl

# Modules_load
- name: Create the k8s.conf file in modules-load
  #when: not has_k8sconf.stat.exists
  become: true
  ansible.builtin.template:
    src: templates/kernel/modules_load_d/k8s.conf.j2
    dest: "{{ sub_file_mappings['system']['modules_load_d']['k8s_conf'] }}"
    mode: "0644"

- name: Load br_netfilter kernel module
  become: true
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Load overlay kernel module
  become: true
  community.general.modprobe:
    name: overlay
    state: present

    # SYSCTL
- name: Create the k8s.conf file in sysctl.d
  become: true
  #when: not has_k8s_sysctl.stat.exists
  ansible.builtin.template:
    src: templates/kernel/sysctl_d/k8s.conf.j2
    dest: "{{ sub_file_mappings['system']['sysctl_d']['k8s_conf'] }}"
    mode: "0644"

- name: Enable ipv4 bridge networking
  become: true
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: "1"
    sysctl_set: true
    state: present
    reload: true

- name: Enable ipv6 bridge networking
  become: true
  ansible.posix.sysctl:
    name: net.ipv4.ip_nonlocal_bind
    value: "1"
    sysctl_set: true
    state: present
    reload: true

- name: Enable ipv4 forwarding
  become: true
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: true
    state: present
    reload: true

- name: Apply sysctl
  become: true
  ansible.builtin.shell: sysctl --system

- name: kill mfers
  become: true
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    enabled: false
    masked: true
    state: stopped
  loop:
    - multipathd.service

- name: start mfers
  become: true
  ansible.builtin.systemd_service:
    name: iscsid
    enabled: true
    masked: false
    state: started
