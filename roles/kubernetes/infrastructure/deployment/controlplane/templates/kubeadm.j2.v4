---
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration

nodeRegistration:
  criSocket: "unix:///var/run/containerd/containerd.sock"
  taints:
    - key: "kubeadmNode"
      value: "someValue"
      effect: "NoSchedule"
  kubeletExtraArgs:
    - name: v
      value: "5"
  ignorePreflightErrors:
    - IsPrivilegedUser
  imagePullPolicy: "IfNotPresent"
  imagePullSerial: true

skipPhases:
  - preflight
timeouts:
  controlPlaneComponentHealthCheck: "60s"
  kubenetesAPICall: "40s"
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
controlPlaneEndpoint: "{{ config['vip']['dns'] }}:6443" # change this (see below)
etcd:
  external:
    endpoints:
      {% for etcdnode in etcd_ips %}
      - "https://{{ etcdnode }}:2379"
      {% endfor %}

    caFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][0] }}
    certFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][1] }}
    keyFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][2] }}
controllerManager:
  extraArgs:
    - name: allocate-node-cidrs
      value: "true"
apiServer:
  extraArgs:
    - name: enable-aggregator-routing
      value: "true"
    - name: allow-privileged
      value: "true"
    - name: authorization-mode
      value: "Webhook,RBAC,Node"
    - name: enable-bootstrap-token-auth
      value: "true"
networking:
  podSubnet: {{ cluster_cni[config['cni']]['pod_network'] | default('10.10.0.0/16') }}
dns:
  disabled: true  # disable CoreDNS
proxy:
  diabled: true
clusterName: "honklabs"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
rotateCertificates: true
serverTLSBootstrap: true
cgroupDriver: systemd
containerRuntimeEndpoint: "unix:///var/run/containerd/containerd.sock"


