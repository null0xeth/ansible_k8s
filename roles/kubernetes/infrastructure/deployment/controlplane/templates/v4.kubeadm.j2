apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  imagePullSerial: true
  kubeletExtraArgs:
  - name: node-ip
    value: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  name: "{{ inventory_hostname }}"
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
skipPhases:
- preflight
- addon/kube-proxy
---
apiServer:
  certSANs:
    - 192.168.155.69
    - k8s.honker.dev
    - 127.0.0.1
  extraArgs:
    - name: allow-privileged
      value: "true"
    - name: enable-aggregator-routing
      value: "true"
    - name: enable-bootstrap-token-auth
      value: "true"
    - name: service-cluster-ip-range
      value: 10.96.0.0/16
apiVersion: kubeadm.k8s.io/v1beta4
caCertificateValidityPeriod: 87600h0m0s
certificateValidityPeriod: 8760h0m0s
certificatesDir: /etc/kubernetes/pki
clusterName: honklabs
controlPlaneEndpoint: k8s.honker.dev:6443
controllerManager:
  extraArgs:
  - name: allocate-node-cidrs
    value: "true"
  - name: cluster-cidr
    value: 10.244.0.0/16
  - name: node-cidr-mask-size-ipv4
    value: "24"
  - name: service-cluster-ip-range
    value: 10.96.0.0/16
dns: {}
encryptionAlgorithm: RSA-2048
etcd:
  external:
    endpoints:
    {% for etcdnode in etcd_ips %}
    - https://{{ etcdnode }}:2379
    {% endfor %}

    caFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][0] }}
    certFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][1] }}
    keyFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][2] }}
imageRepository: registry.k8s.io
kind: ClusterConfiguration
kubernetesVersion: v1.31.2
networking:
  dnsDomain: cluster.local
  podSubnet: 10.244.0.0/16
  serviceSubnet: 10.96.0.0/16
proxy: {}
scheduler: {}
