---
- name: Check if kubernetes is already initialized
  ansible.builtin.include_tasks: ../common/prerequisites/main.yml

- name: Provision the first controlplane
  #when: not kubernetes_initialized.stat.exists
  block:
    - name: Provision etcd certificates
      ansible.builtin.include_tasks: ../high_availability/main.yml

    - name: "[Non-HA]: Create the kubeadm configuration file"
      ansible.builtin.include_tasks: prerequisites/main.yml

    - name: Initialize the kubernetes controlplane
      ansible.builtin.include_tasks: deployment/main.yml

    - name: "[HA]: Generate the controlplane join command"
      ansible.builtin.include_tasks: post_deployment/kubeadm/controlplane_join_cmd.yml

    - name: "[Non-HA]: Check if the kubeconfig file exists"
      ansible.builtin.include_tasks: ../common/dotkube/main.yml

    - name: create resource using name generated by the server
      kubernetes.core.k8s:
        state: present
        generate_name: bootstrap-crb
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: create-csrs-for-bootstrapping
          subjects:
            - kind: Group
              name: system:bootstrappers
              apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: system:node-bootstrapper
            apiGroup: rbac.authorization.k8s.io

    - name: manifest
      kubernetes.core.k8s:
        state: present
        generate_name: bootstrap-approve-
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: auto-approve-csrs-for-group
          subjects:
            - kind: Group
              name: system:bootstrappers
              apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
            apiGroup: rbac.authorization.k8s.io

    - name: manifesto
      kubernetes.core.k8s:
        state: present
        generate_name: bootstrap-approve-
        definition:
          # Approve renewal CSRs for the group "system:nodes"
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: auto-approve-renewals-for-nodes
          subjects:
            - kind: Group
              name: system:nodes
              apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
            apiGroup: rbac.authorization.k8s.io
    # - name: Install cilium cli
    #   ansible.builtin.shell: |
    #     CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
    #     CLI_ARCH=amd64
    #     if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
    #     curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
    #     sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
    #     sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
    #     rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
    #
    # - name: Install cilium
    #   ansible.builtin.shell: |
    #     cilium install \
    #       --version 1.16.3 \
    #       --namespace kube-system \
    #       --set bpf.datapathMode=netkit \
    #       --set bpf.masquerade=true \
    #       --set kubeProxyReplacement=true \
    #       --set ipv4-native-routing-cidr=10.244.0.0/16 \
    #       --set ipv4.enabled=true \
    #       --set enable-ipv4=true \
    #       --set enable-ipv4-masquerade=true \
    #       --set enable-ip-masq-agent=false \
    #       --set routing-mode=native
    #
    # - name: "[CNI]: Configure {{ config['cni'] }} as the cluster CNI"
    #   when: config['cni'] == 'flannel'
    #   ansible.builtin.include_tasks: "post_deployment/cni/{{ config['cni'] }}.yml"
