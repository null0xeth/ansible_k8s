apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  imagePullSerial: true
  kubeletExtraArgs:
    - name: "node-ip"
      value: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  name: "{{ inventory_hostname }}"
  taints:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
skipPhases:
  - preflight
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: v1.31.2
clusterName: honklabs
controlPlaneEndpoint: k8s.honker.dev:6443
apiServer:
  certSANs:
    - "192.168.199.69"
    - "k8s.honker.dev"
    - "127.0.0.1"
  extraArgs:
    - name: allow-privileged
      value: "true"
    - name: enable-aggregator-routing
      value: "true"
    - name: "etcd-cafile"
      value: "/etc/kubernetes/pki/etcd/ca.crt" 
    - name: "etcd-certfile"
      value: "/etc/kubernetes/pki/apiserver-etcd-client.crt" 
    - name: "etcd-keyfile" 
      value: "/etc/kubernetes/pki/apiserver-etcd-client.key"  
    - name: enable-bootstrap-token-auth
      value: "true"
    - name: service-cluster-ip-range
      value: 10.96.0.0/16
    - name: "requestheader-allowed-names"
      value: ""

certificatesDir: /etc/kubernetes/pki
controllerManager:
  extraArgs:
  - name: "bind-address"
    value: "0.0.0.0" 
  - name: allocate-node-cidrs
    value: "true"
  - name: cluster-cidr
    value: 10.244.0.0/16
  - name: node-cidr-mask-size-ipv4
    value: "24"
  - name: service-cluster-ip-range
    value: 10.96.0.0/16
  - name: cluster-signing-cert-file
    value: /etc/kubernetes/pki/ca.crt
  - name: root-ca-file
    value: /etc/kubernetes/pki/ca.crt
  - name: cluster-signing-key-file
    value: /etc/kubernetes/pki/ca.key  

etcd:
  external:
    endpoints:
    {% for etcdnode in etcd_ips %}
    - https://{{ etcdnode }}:2379
    {% endfor %}

    caFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][0] }}
    certFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][1] }}
    keyFile: {{ cp_sub_file_mappings['system']['kubernetes']['cluster_certs'][2] }}
imageRepository: registry.k8s.io
encryptionAlgorithm: ECDSA-P256
networking:
  dnsDomain: cluster.local
  podSubnet: 10.244.0.0/16
  serviceSubnet: 10.96.0.0/16
proxy:
  disabled: true
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
containerRuntimeEndpoint: unix:///var/run/containerd/containerd.sock
serverTLSBootstrap: true
cgroupDriver: systemd
rotateCertificates: true
RotateKubeletServerCertificate: true
clusterDomain: "cluster.local"  

