---
- name: "Prepare {{ groups['etcd'][0] }}"
  block:
    - name: Check if the ssh-key is already present
      become: true
      ansible.builtin.stat:
        path: "{{ primary_ssh_path }}"
      register: has_ssh_key

    - name: "Generate ssh keys for {{ groups['etcd'][0] }}"
      #when: not has_ssh_key.stat.exists
      block:
        - name: "Generate ssh-keys for {{ groups['etcd'][0] }}"
          community.crypto.openssh_keypair:
            path: "{{ primary_ssh_path }}"
            type: ed25519
            comment: "{{ global_primary_user }}@{{ inventory_hostname }}"
          register: etcd_keys

    - name: Set key globally.
      ansible.builtin.set_fact:
        etcd_key: >
          {{ etcd_keys.public_key }}
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ etcd_group_hosts + [ global_controlplane_hosts[0] ] }}"

    - name: Add pubkey to nodes
      loop: "{{ etcd_group_hosts + [ global_controlplane_hosts[0] ] }}"
      delegate_to: "{{ item }}"
      ansible.posix.authorized_key:
        user: "{{ global_primary_user }}"
        state: present
        key: "{{ etcd_key }}"

- name: Set etcd file facts
  loop: "{{ groups['etcd'] }}"
  ansible.builtin.set_fact:
    "{{ 'node_' + item + '_kubeadmcfg' }}": "{{ global_tmp_dir + '/' + item + '/kubeadmcfg.yaml' }}"

- name: Create command list number 1
  loop: "{{ lookup('inventory_hostnames', 'etcd', wantlist=True) }}"
  when: not item in groups['etcd'][0]
  ansible.builtin.set_fact:
    "{{ 'node_' + item + '_cmds' }}":
      - "kubeadm init phase certs etcd-server --config={{ lookup('ansible.builtin.vars', 'node_' + item + '_kubeadmcfg') }}"
      - "kubeadm init phase certs etcd-peer --config={{ lookup('ansible.builtin.vars', 'node_' + item + '_kubeadmcfg') }}"
      - "kubeadm init phase certs etcd-healthcheck-client --config={{ lookup('ansible.builtin.vars', 'node_' + item + '_kubeadmcfg') }}"
      - "kubeadm init phase certs apiserver-etcd-client --config={{ lookup('ansible.builtin.vars', 'node_' + item + '_kubeadmcfg') }}"
      - "cp -R {{ directory_mapping['system']['kubernetes']['pki'] }} {{ global_tmp_dir }}/{{ item }}"
      - "find {{ directory_mapping['system']['kubernetes']['pki'] }} -not -name ca.crt -not -name ca.key -type f -delete"

- name: Create command list number 2
  ansible.builtin.set_fact:
    "{{ 'node_' + groups['etcd'][0] + '_cmds' }}":
      - "kubeadm init phase certs etcd-server --config=/tmp/{{ groups['etcd'][0] }}/kubeadmcfg.yaml"
      - "kubeadm init phase certs etcd-peer --config=/tmp/{{ groups['etcd'][0] }}/kubeadmcfg.yaml"
      - "kubeadm init phase certs etcd-healthcheck-client --config=/tmp/{{ groups['etcd'][0] }}/kubeadmcfg.yaml"
      - "kubeadm init phase certs apiserver-etcd-client --config=/tmp/{{ groups['etcd'][0] }}/kubeadmcfg.yaml"

- name: Combine both lists and register as fact
  ansible.builtin.set_fact:
    etcd_cmds:
      - "{{ node_etcd03_cmds }}"
      - "{{ node_etcd02_cmds }}"
      - "{{ node_etcd01_cmds }}"
      - "find /tmp/etcd02 -name ca.key -type f -delete"
      - "find /tmp/etcd03 -name ca.key -type f -delete"
